<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kotlin on Shmulik Klein | Blog</title><link>http://shmulik-klein.github.io/tags/kotlin/</link><description>Recent content in Kotlin on Shmulik Klein | Blog</description><generator>Hugo</generator><language>en-us</language><copyright>&amp;copy; Copyright 2025, Shmulik Klein</copyright><lastBuildDate>Thu, 15 Dec 2022 10:50:50 +0100</lastBuildDate><atom:link href="http://shmulik-klein.github.io/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Must-known Kotlin Features for Functional Programming</title><link>http://shmulik-klein.github.io/posts/functional-kotlin/</link><pubDate>Thu, 15 Dec 2022 10:50:50 +0100</pubDate><guid>http://shmulik-klein.github.io/posts/functional-kotlin/</guid><description>&lt;p>Kotlin takes Java’s functional programming features, gives them a makeover, and makes them way cooler. It’s like Java went to a coding gym and came back stronger and sleeker. In this post, we’ll check out how Kotlin takes Java’s functional side to the next level, making your code cleaner and way more fun to write.&lt;/p>
&lt;h3 id="function-types">Function Types&lt;/h3>
&lt;p>Functions are &lt;a href="https://en.wikipedia.org/wiki/First-class_function">&lt;em>first class citizens&lt;/em>&lt;/a> in Kotlin. To facilitate this, Kotlin has a &lt;a href="https://kotlinlang.org/docs/lambdas.html#function-types">&lt;em>Fuction Type&lt;/em>&lt;/a> - a type which specifies that an object needs to be a function.&lt;/p></description></item></channel></rss>