<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on Shmulik Klein | Blog</title><link>http://shmulik-klein.github.io/tags/development/</link><description>Recent content in Development on Shmulik Klein | Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; Copyright 2022, Shmulik Klein</copyright><lastBuildDate>Wed, 20 Jul 2022 10:42:33 +0200</lastBuildDate><atom:link href="http://shmulik-klein.github.io/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>To Seal or not to Seal: Sealed Classes</title><link>http://shmulik-klein.github.io/posts/sealed-classes/</link><pubDate>Wed, 20 Jul 2022 10:42:33 +0200</pubDate><guid>http://shmulik-klein.github.io/posts/sealed-classes/</guid><description>Sealed with a Kiss Java 15 introduced a preview feature called Sealed Classes and Intefaces, which was finalized in Java 17. Sealed classes and interfaces restrict which other classes or interfaces may extend or implement them.
You seal a class/interface by applying the sealed modifier before the class/interface keyword. Than, you have to provide which classes/interface are allowed to inherit/implement the sealed class/interface using the permits keyword.
public sealed class Beer permits Ale, Lager, Porter, Stout { .</description></item></channel></rss>